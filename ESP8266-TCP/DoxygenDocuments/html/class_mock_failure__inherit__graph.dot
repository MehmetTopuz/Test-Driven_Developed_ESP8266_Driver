digraph "MockFailure"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{MockFailure\n||+  MockFailure(UtestShell\l *test)\l+ virtual ~MockFailure\l() _destructor_override\l# void addExpectationsAndCall\lHistory(const MockExpectedCalls\lList &expectations)\l# void addExpectationsAndCall\lHistoryRelatedTo(const SimpleString\l &function, const MockExpectedCallsList\l &expectations)\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{TestFailure\n|# SimpleString testName_\l# SimpleString testNameOnly_\l# SimpleString fileName_\l# size_t lineNumber_\l# SimpleString testFileName_\l# size_t testLineNumber_\l# SimpleString message_\l|+  TestFailure(UtestShell\l *, const char *fileName,\l size_t lineNumber, const\l SimpleString &theMessage)\l+  TestFailure(UtestShell\l *, const SimpleString\l &theMessage)\l+  TestFailure(UtestShell\l *, const char *fileName,\l size_t lineNumber)\l+  TestFailure(const\l TestFailure &)\l+ virtual ~TestFailure()\l+ virtual SimpleString\l getFileName() const\l+ virtual SimpleString\l getTestName() const\l+ virtual SimpleString\l getTestNameOnly() const\l+ virtual size_t getFailure\lLineNumber() const\l+ virtual SimpleString\l getMessage() const\l+ virtual SimpleString\l getTestFileName() const\l+ virtual size_t getTestLine\lNumber() const\l+ bool isOutsideTestFile\l() const\l+ bool isInHelperFunction\l() const\l# SimpleString createButWas\lString(const SimpleString\l &expected, const SimpleString\l &actual)\l# SimpleString createDifference\lAtPosString(const SimpleString\l &actual, size_t offset, size\l_t reportedPosition)\l# SimpleString createUserText\l(const SimpleString &text)\l# TestFailure & operator\l=(const TestFailure &)\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_test_failure.html",tooltip=" "];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{MockCallOrderFailure\n||+  MockCallOrderFailure\l(UtestShell *test, const\l MockExpectedCallsList &expectations)\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_mock_call_order_failure.html",tooltip=" "];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{MockExpectedCallsDidntHappen\lFailure\n||+  MockExpectedCallsDidntHappen\lFailure(UtestShell *test,\l const MockExpectedCallsList\l &expectations)\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_mock_expected_calls_didnt_happen_failure.html",tooltip=" "];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node5 [label="{MockExpectedObjectDidntHappen\lFailure\n||+  MockExpectedObjectDidnt\lHappenFailure(UtestShell\l *test, const SimpleString\l &functionName, const MockExpected\lCallsList &expectations)\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_mock_expected_object_didnt_happen_failure.html",tooltip=" "];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node6 [label="{MockExpectedParameterDidnt\lHappenFailure\n||+  MockExpectedParameterDidnt\lHappenFailure(UtestShell\l *test, const SimpleString\l &functionName, const MockExpectedCalls\lList &expectations)\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_mock_expected_parameter_didnt_happen_failure.html",tooltip=" "];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node7 [label="{MockNoWayToCompareCustom\lTypeFailure\n||+  MockNoWayToCompareCustom\lTypeFailure(UtestShell\l *test, const SimpleString\l &typeName)\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_mock_no_way_to_compare_custom_type_failure.html",tooltip=" "];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node8 [label="{MockNoWayToCopyCustomType\lFailure\n||+  MockNoWayToCopyCustomType\lFailure(UtestShell *test,\l const SimpleString &typeName)\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_mock_no_way_to_copy_custom_type_failure.html",tooltip=" "];
  Node1 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node9 [label="{MockUnexpectedCallHappened\lFailure\n||+  MockUnexpectedCallHappened\lFailure(UtestShell *test,\l const SimpleString &name,\l const MockExpectedCallsList\l &expectations)\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_mock_unexpected_call_happened_failure.html",tooltip=" "];
  Node1 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node10 [label="{MockUnexpectedInputParameter\lFailure\n||+  MockUnexpectedInputParameter\lFailure(UtestShell *test,\l const SimpleString &functionName,\l const MockNamedValue &parameter,\l const MockExpectedCallsList &expectations)\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_mock_unexpected_input_parameter_failure.html",tooltip=" "];
  Node1 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node11 [label="{MockUnexpectedObjectFailure\n||+  MockUnexpectedObjectFailure\l(UtestShell *test, const\l SimpleString &functionName,\l const void *expected, const\l MockExpectedCallsList &expectations)\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_mock_unexpected_object_failure.html",tooltip=" "];
  Node1 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node12 [label="{MockUnexpectedOutputParameter\lFailure\n||+  MockUnexpectedOutputParameter\lFailure(UtestShell *test,\l const SimpleString &functionName,\l const MockNamedValue &parameter,\l const MockExpectedCallsList &expectations)\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_mock_unexpected_output_parameter_failure.html",tooltip=" "];
}
