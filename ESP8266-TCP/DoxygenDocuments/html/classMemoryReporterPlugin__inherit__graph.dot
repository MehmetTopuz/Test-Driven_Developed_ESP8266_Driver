digraph "MemoryReporterPlugin"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{MemoryReporterPlugin\n|- MemoryReportFormatter\l * formatter_\l- MemoryReportAllocator\l mallocAllocator\l- MemoryReportAllocator\l newAllocator\l- MemoryReportAllocator\l newArrayAllocator\l- SimpleString currentTest\lGroup_\l|+  MemoryReporterPlugin()\l+ virtual ~MemoryReporterPlugin\l() _destructor_override\l+ virtual void preTestAction\l(UtestShell &test, TestResult\l &result) _override\l+ virtual void postTestAction\l(UtestShell &test, TestResult\l &result) _override\l+ virtual bool parseArguments\l(int, const char *const\l *, int) _override\l+ MemoryReportAllocator\l * getMallocAllocator()\l+ MemoryReportAllocator\l * getNewAllocator()\l+ MemoryReportAllocator\l * getNewArrayAllocator()\l# virtual MemoryReportFormatter\l * createMemoryFormatter\l(const SimpleString &type)\l- void destroyMemoryFormatter\l(MemoryReportFormatter *formatter)\l- void setGlobalMemoryReport\lAllocators()\l- void removeGlobalMemoryReport\lAllocators()\l- void initializeAllocator\l(MemoryReportAllocator\l *allocator, TestResult\l &result)\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{TestPlugin\n|- TestPlugin * next_\l- SimpleString name_\l- bool enabled_\l|+  TestPlugin(const Simple\lString &name)\l+ virtual ~TestPlugin()\l+ virtual void preTestAction\l(UtestShell &, TestResult &)\l+ virtual void postTestAction\l(UtestShell &, TestResult &)\l+ virtual bool parseArguments\l(int, const char *const\l *, int)\l+ virtual void runAllPreTest\lAction(UtestShell &, TestResult &)\l+ virtual void runAllPostTest\lAction(UtestShell &, TestResult &)\l+ virtual bool parseAllArguments\l(int ac, const char *const\l *av, int index)\l+ virtual bool parseAllArguments\l(int ac, char **av, int index)\l+ virtual TestPlugin\l * addPlugin(TestPlugin *)\land 7 more...\l#  TestPlugin(TestPlugin\l *next_)\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classTestPlugin.html",tooltip=" "];
}
