digraph "MemoryLeakDetectorTable"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{MemoryLeakDetectorTable\n||+ void clearAllAccounting\l(MemLeakPeriod period)\l+ void addNewNode(MemoryLeak\lDetectorNode *node)\l+ MemoryLeakDetectorNode\l * retrieveNode(char *memory)\l+ MemoryLeakDetectorNode\l * removeNode(char *memory)\l+ size_t getTotalLeaks\l(MemLeakPeriod period)\l+ MemoryLeakDetectorNode\l * getFirstLeak(MemLeakPeriod\l period)\l+ MemoryLeakDetectorNode\l * getFirstLeakForAllocation\lStage(unsigned char allocation_stage)\l+ MemoryLeakDetectorNode\l * getNextLeak(MemoryLeakDetector\lNode *leak, MemLeakPeriod period)\l+ MemoryLeakDetectorNode\l * getNextLeakForAllocationStage\l(MemoryLeakDetectorNode *leak,\l unsigned char allocation_stage)\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
}
